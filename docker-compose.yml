version: "3"

services:
  gateway:
    image: lnq99/sn-gateway:1.0
    container_name: gateway
    build: gateway-service
    depends_on:
      - profiles
      - posts
      - stats
      - web
      - queue
    #      - newsfeed
    #      - search
    ports:
      - "8080:8080"
  #    environment:
  #      - AUTH0_DOMAIN=lnq99.eu.auth0.com
  #      - AUTH0_AUDIENCE=social-network
  #      - PROFILES_SVC_URL=profiles

  queue:
    image: redis:alpine
    container_name: queue
    restart: on-failure
    ports:
      - "6379:6379"


  profiles:
    image: lnq99/sn-profiles:1.0
    container_name: profiles
    build: profiles-service
    depends_on:
      - db
    ports:
      - "8070:8070"

  posts:
    image: lnq99/sn-posts:1.0
    container_name: posts
    build: posts-service
    depends_on:
      - db
    ports:
      - "8060:8060"

  #  newsfeed:
  #    image: lnq99/sn-newsfeed:1.0
  #    container_name: newsfeed
  #    build: newsfeed-service
  #
  #  search:
  #    image: lnq99/sn-search:1.0
  #    container_name: search
  #    build: search-service
  #
  stats:
    image: lnq99/sn-stats:1.0
    container_name: stats
    build: stats-service
    depends_on:
      - db
    ports:
      - "8050:8050"

  web:
    image: lnq99/sn-web:1.0
    container_name: web
    build: client
    depends_on:
      - db
    ports:
      - "3000:80"

  db:
    image: postgres:15
    container_name: db
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
      - ./utils/csv:/tmp/csv
    ports:
      - "5432:5432"

volumes:
  db-data: