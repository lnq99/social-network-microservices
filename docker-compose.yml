version: "3"

services:
  gateway:
    image: lnq99/sn-gateway:1.0
    container_name: gateway
    build: gateway-service
    depends_on:
      - profiles
      - posts
      - stats
      - web
      - queue
      - db
    ports:
      - "8080:8080"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - SERVICE_PROFILES_ADDR=http://profiles:8070
      - SERVICE_POSTS_ADDR=http://posts:8060
      - SERVICE_STATS_ADDR=http://stats:8050
      - SERVICE_QUEUE_ADDR=http://queue:6379
      - MIGRATION_URL=file://./db/migration
      - DB_URL=${GATEWAY_DB_URL}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}
  #    - AUTH0_DOMAIN=lnq99.eu.auth0.com
  #    - AUTH0_AUDIENCE=social-network

  profiles:
    image: lnq99/sn-profiles:1.0
    container_name: profiles
    build: profiles-service
    depends_on:
      - db
    ports:
      - "8070:8070"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8070
      - MIGRATION_URL=file://./db/migration
      - DB_URL=${PROFILES_DB_URL}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}

  posts:
    image: lnq99/sn-posts:1.0
    container_name: posts
    build: posts-service
    depends_on:
      - db
    ports:
      - "8060:8060"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8060
      - MIGRATION_URL=file://./db/migration
      - DB_URL=${POSTS_DB_URL}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}

  stats:
    image: lnq99/sn-stats:1.0
    container_name: stats
    build: stats-service
    depends_on:
      - db
    ports:
      - "8050:8050"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8050
      - MIGRATION_URL=file://./db/migration
      - DB_URL=${STATS_DB_URL}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}

  web:
    image: lnq99/sn-web:1.0
    container_name: web
    build: client
    depends_on:
      - db
    ports:
      - "3000:80"

  db:
    image: postgres:16
    container_name: db
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
      - ./utils/csv:/tmp/csv
    ports:
      - "5432:5432"

  queue:
    image: redis:alpine
    container_name: queue
    restart: on-failure
    ports:
      - "6379:6379"

volumes:
  db-data: